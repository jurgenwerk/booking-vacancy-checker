name: Check Booking Availability

on:
  schedule:
    # Run every hour
    - cron: "0 * * * *"
  workflow_dispatch: # Allow manual triggering

jobs:
  check-availability:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Run availability check
        run: npm start

      - name: Check for changes and create issue
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');

            // Run the script and capture output
            const output = execSync('npm start', { encoding: 'utf8' });
            console.log('Script output:', output);

            // Extract available dates from output
            let currentDates = [];
            if (output.includes('‚úÖ Available check-in dates found:')) {
              const datesMatch = output.match(/Available check-in dates found: \[(.*?)\]/);
              if (datesMatch) {
                currentDates = datesMatch[1].split(',').map(date => date.trim().replace(/['"]/g, ''));
              }
            }

            // Create a hash of current dates for comparison
            const currentHash = JSON.stringify(currentDates.sort());

            // Look for existing issues to get previous state
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'availability',
              state: 'all',
              per_page: 10,
              sort: 'created',
              direction: 'desc'
            });

            let previousHash = null;
            let previousDates = [];

            // Find the most recent availability issue
            const latestIssue = issues.data.find(issue =>
              issue.title.includes('VIB Vacation Home') &&
              issue.body.includes('Available dates:')
            );

            if (latestIssue) {
              // Extract dates from the latest issue
              const bodyMatch = latestIssue.body.match(/Available dates: (.*?)(?:\n|$)/);
              if (bodyMatch) {
                previousDates = bodyMatch[1].split(',').map(date => date.trim()).filter(date => date);
                previousHash = JSON.stringify(previousDates.sort());
              }
            }

            // Check if results have changed
            const hasChanged = currentHash !== previousHash;

            console.log('Previous dates:', previousDates);
            console.log('Current dates:', currentDates);
            console.log('Has changed:', hasChanged);

            if (hasChanged) {
              // Determine what changed
              const addedDates = currentDates.filter(date => !previousDates.includes(date));
              const removedDates = previousDates.filter(date => !currentDates.includes(date));

              let issueTitle = '';
              let issueBody = '';

              if (currentDates.length === 0) {
                issueTitle = 'üè† VIB Vacation Home - No Available Dates';
                issueBody = `## No Available Dates Found

**Date:** ${new Date().toLocaleString()}
**Status:** All previously available dates are now booked

**Previously available dates:** ${previousDates.length > 0 ? previousDates.join(', ') : 'None'}

---
*Generated by GitHub Actions*`;
              } else if (previousDates.length === 0) {
                issueTitle = 'üè† VIB Vacation Home - New Dates Available!';
                issueBody = `## New Available Dates Found!

**Date:** ${new Date().toLocaleString()}
**Available dates:** ${currentDates.join(', ')}

This is the first time dates have been found!

---
*Generated by GitHub Actions*`;
              } else {
                issueTitle = 'üè† VIB Vacation Home - Availability Changed!';
                issueBody = `## Availability Status Changed

**Date:** ${new Date().toLocaleString()}

**Newly available:** ${addedDates.length > 0 ? addedDates.join(', ') : 'None'}
**No longer available:** ${removedDates.length > 0 ? removedDates.join(', ') : 'None'}

**Current available dates:** ${currentDates.join(', ')}

---
*Generated by GitHub Actions*`;
              }

              // Create GitHub issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: ['booking', 'automated', 'availability']
              });

              console.log('‚úÖ GitHub issue created for availability change');
            } else {
              console.log('‚ÑπÔ∏è No changes detected, no issue created');
            }

    # Optional: Discord notification (uncomment and add DISCORD_WEBHOOK secret)
    # - name: Notify Discord
    #   if: success()
    #   uses: Ilshidur/action-discord@master
    #   env:
    #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    #   with:
    #     args: 'üè† VIB Vacation Home availability check completed!'
